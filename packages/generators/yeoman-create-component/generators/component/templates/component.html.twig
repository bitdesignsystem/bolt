{% set schema = bolt.data.components["@bolt-components-<%= props.name.kebabCase %>"].schema %}

{% if enable_json_schema_validation %}
  {{ validate_data_schema(schema, _self) | raw }}
{% endif %}

{# Variables #}
{% set base_class = "c-bolt-<%= props.name.kebabCase %>" %}
{% set props = create_attribute({

}) %}
{% set attributes = merge_attributes(create_attribute(attributes|default({})), props) %}

{# Array of classes based on the defined + default props #}
{% set classes = [
  base_class,
] %}

{#
  Sort classes passed in via attributes into two groups:
  1. Those that should be applied to the inner tag (namely, "is-" and "has-" classes)
  2. Those that should be applied to the outer custom element (everything else EXCEPT c-bolt-* classes, which should never be passed in via attributes)
#}
{% set outer_classes = [] %}
{% set inner_classes = classes %}

{% for class in attributes["class"] %}
  {% if class starts with "is-" or class starts with "has-" %}
    {% set inner_classes = inner_classes|merge([class]) %}
  {% elseif class starts with "c-bolt-" == false %}
    {% set outer_classes = outer_classes|merge([class]) %}
  {% endif %}
{% endfor %}

<bolt-<%= props.name.kebabCase %>
  {% if outer_classes %} class="{{ outer_classes|join(' ') }}" {% endif %}
  {{ attributes|without('class') }}
>
  <div {{ inner_attributes.addClass(inner_classes) }} is="shadow-root">
   
  </div>
</bolt-<%= props.name.kebabCase %>>
